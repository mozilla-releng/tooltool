[tox]
envlist = docker

[testenv:docker]
allowlist_externals=docker
passenv =
    PYTHON_VERSION
    TOXENV
setenv =
    PYTHON_VERSION=3.8
    TOXENV=check,py38
deps =
usedevelop = false
depends =
skip_install = true
commands =
    docker build --build-arg PYTHON_VERSION={env:PYTHON_VERSION} -t tooltool-{envname}-test -f Dockerfile.test .
    docker run --rm -v {toxinidir}:/app -v tooltool-{envname}-tox:/app/.tox tooltool-{envname}-test {env:TOXENV}

[testenv]
setenv =
    PYTHONDONTWRITEBYTECODE=1
usedevelop = true
deps =
    -r {toxinidir}/requirements/test.txt
commands =
    {posargs:py.test --cov-config=tox.ini --cov-append --cov=tooltool_api --cov-report term-missing tests}

[testenv:clean]
skip_install = true
commands = coverage erase
depends =

[testenv:report]
skip_install = true
commands = coverage report -m
depends = py38
parallel_show_output = true

[testenv:check]
skip_install = true
commands =
    black --diff --check {toxinidir}
    isort --check -rc -df {toxinidir}
    pip-compile-multi verify
    flake8 {toxinidir}
# Doesn't work without a .git in the same directory
#    check-manifest -v {toxinidir}

[testenv:codecov]
allowlist_externals = sed
passenv =
    CI
    CI_*
    CODECOV_TOKEN
commands =
  coverage xml
  sed -i -e 's|filename="|filename="api/|' coverage.xml
  codecov --disable pycov --commit={env:CI_HEAD_REV} --branch={env:CI_BRANCH_NAME} --pr={env:CI_PR_NUMBER}

[flake8]
max-line-length = 160
exclude = .ropeproject,.tox,sandbox
show-source = True
# black-compatible quotes
inline-quotes = "
multiline-quotes = "
docstring-quotes = """
# flake8 doesn't differentiat the use of `:` in dictionaries vs. slices,
# whereas # black formats the a later with surrounding whitespace. This causes
# flake8 to incorrecly report E203.
# See https://black.readthedocs.io/en/stable/the_black_code_style.html#slices
# W503 is a default ignore, but gets overridden when we set this, so we need
# to add it again ourselves.
ignore = E203,W503

[pytest]
norecursedirs = .tox .git .hg sandbox
python_files = test_*.py
addopts = -vv -s --color=yes

[coverage:run]
branch = true
